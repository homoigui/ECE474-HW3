`timescale 1ns / 1ps

module HLSM (Clk, Rst, Start, Done, a, b, c, z, x);
	input [15:0] a, b, c;
	input Clk, Rst, Start;
	output reg [15:0] x;
	output reg [7:0] z;
	reg [7:0] d, e, f, g;
	output reg Done;

	localparam STATE_WAIT = 2'd0,
	           STATE_1 = 2'd1,
	           STATE_2 = 2'd2,
	           STATE_3 = 2'd3,
	           STATE_4 = 2'd4,
	           STATE_5 = 2'd5,
	           STATE_FINAL = 2'd6;

	reg [2:0] State;

	always@ (posedge Clk) begin
		if (Rst == 1'b1) begin
			State <= STATE_WAIT;
			Done <= 0;
			z <= 0;
			x <= 0;
		end
		else begin
		case (State)
			STATE_WAIT: begin
				Done <= 0;
				if (Start = 1'b1) begin
					State = STATE_1;
				end
				else begin
					State = STATE_WAIT;
				end
			end
			STATE_1: begin
				d <= a + b;
				f <= a * c;

				State <= STATE_2;
			end
			STATE_2: begin
				e <= a + c;

				State <= STATE_3;
			end
			STATE_3: begin
				g <= d > e;

				State <= STATE_4;
			end
			STATE_4: begin
				x <= f - d;

				State <= STATE_5;
			end
			STATE_5: begin
				z <= g ? d : e;

				State <= STATE_FINAL;
			end
			STATE_FINAL: begin
				Done <= 1'b1;
				State <= STATE_WAIT;
			end
			default: State <= STATE_WAIT;
		endcase
		end
	end
endmodule