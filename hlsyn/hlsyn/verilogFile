`timescale 1ns / 1ps

module HLSM (Clk, Rst, Start, Done, a, b, c, d, e, f, j, k);
	input signed [15:0] a, b, c, d, e, f;
	input Clk, Rst, Start;
	output reg signed [15:0] j, k;
	reg signed [15:0] h, i;
	input Clk, Rst, Start;
	output reg Done;

	localparam STATE_WAIT = 2'd0,
	           STATE_1 = 2'd1,
	           STATE_2 = 2'd2,
	           STATE_3 = 2'd3,
	           STATE_4 = 2'd4,
	           STATE_5 = 2'd5,
	           STATE_6 = 2'd6,
	           STATE_FINAL = 2'd7;

	reg [2:0] State;

	always@ (posedge Clk) begin
		if (Rst == 1'b1) begin
			State <= STATE_WAIT;
			Done <= 0;
			j <= 0;
			k <= 0;
		end
		else begin
		case (State)
			STATE_WAIT: begin
				Done <= 0;
				if (Start == 1'b1) begin
					State <= STATE_1;
				end
				else begin
					State <= STATE_WAIT;
				end
			end
			STATE_1: begin
				h <= a * b;

				State <= STATE_2;
			end
			STATE_2: begin

				State <= STATE_3;
			end
			STATE_3: begin
				i <= h + c;
				k <= e * f;

				State <= STATE_4;
			end
			STATE_4: begin

				State <= STATE_5;
			end
			STATE_5: begin
				j <= i * d;

				State <= STATE_6;
			end
			STATE_6: begin

				State <= STATE_FINAL;
			end
			STATE_FINAL: begin
				Done <= 1'b1;
				State <= STATE_WAIT;
			end
			default: State <= STATE_WAIT;
		endcase
		end
	end
endmodule